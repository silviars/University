USE Hotel3

--NOT NULL CONSTRAINTS

--ROOMS
UPDATE ROOMS SET roomNumber = -1 WHERE roomNumber IS NULL;
ALTER TABLE ROOMS ALTER COLUMN roomNumber INT NOT NULL;

UPDATE ROOMS SET priceForNight = 0.0 WHERE priceForNight IS NULL;
ALTER TABLE ROOMS ALTER COLUMN priceForNight DECIMAL(8,2) NOT NULL;

--CLIENTS
UPDATE CLIENTS SET firstName = ' ' WHERE firstName IS NULL;
ALTER TABLE CLIENTS ALTER COLUMN firstName VARCHAR(20) NOT NULL;

UPDATE CLIENTS SET lastName = ' ' WHERE lastName IS NULL;
ALTER TABLE CLIENTS ALTER COLUMN lastName VARCHAR(20) NOT NULL;

UPDATE CLIENTS SET personalID = ' ' WHERE personalID IS NULL;
ALTER TABLE CLIENTS ALTER COLUMN personalID CHAR(10) NOT NULL;

UPDATE CLIENTS SET IDCardNumber = ' ' WHERE IDCardNumber IS NULL;
ALTER TABLE CLIENTS ALTER COLUMN IDCardNumber CHAR(9) NOT NULL;

--RESERVATIONS
UPDATE RESERVATIONS SET roomNumber = -1 WHERE roomNumber IS NULL;
ALTER TABLE RESERVATIONS ALTER COLUMN roomNumber INT NOT NULL;

UPDATE RESERVATIONS SET clientsNumber = -1 WHERE clientsNumber IS NULL;
ALTER TABLE RESERVATIONS ALTER COLUMN clientsNumber INT NOT NULL;

UPDATE RESERVATIONS SET packet = ' ' WHERE packet IS NULL;
ALTER TABLE RESERVATIONS ALTER COLUMN packet CHAR(2) NOT NULL;

--EMPLOYEES
UPDATE EMPLOYEES SET firstName = ' ' WHERE firstName IS NULL;
ALTER TABLE EMPLOYEES ALTER COLUMN firstName VARCHAR(20) NOT NULL;

UPDATE EMPLOYEES SET lastName = ' ' WHERE lastName IS NULL;
ALTER TABLE EMPLOYEES ALTER COLUMN lastName VARCHAR(20) NOT NULL;

UPDATE EMPLOYEES SET personalID = ' ' WHERE personalID IS NULL;
ALTER TABLE EMPLOYEES ALTER COLUMN personalID CHAR(10) NOT NULL;

UPDATE EMPLOYEES SET type = ' ' WHERE type IS NULL;
ALTER TABLE EMPLOYEES ALTER COLUMN type VARCHAR(15) NOT NULL;

UPDATE EMPLOYEES SET insuranceNumber = ' ' WHERE insuranceNumber IS NULL;
ALTER TABLE EMPLOYEES ALTER COLUMN insuranceNumber VARCHAR(20) NOT NULL;

UPDATE EMPLOYEES SET roomNumber = 0 WHERE roomNumber IS NULL;
ALTER TABLE EMPLOYEES ALTER COLUMN roomNumber INT NOT NULL;

--PACKAGES
UPDATE PACKAGES SET package = ' ' WHERE package IS NULL;
ALTER TABLE PACKAGES ALTER COLUMN package CHAR(2) NOT NULL;

UPDATE PACKAGES SET additionalPrice = 0 WHERE additionalPrice IS NULL;
ALTER TABLE PACKAGES ALTER COLUMN additionalPrice INT NOT NULL;

--DEFAULT 

--CLIENTS
ALTER TABLE CLIENTS ADD CONSTRAINT DF_CLIENTSECONDNAME DEFAULT 'N/A' FOR secondName;

ALTER TABLE CLIENTS ADD CONSTRAINT DF_CLIENTGENDER DEFAULT 'N/A' FOR gender;

ALTER TABLE CLIENTS ADD CONSTRAINT DF_CLIENTADDRES DEFAULT 'N/A' FOR address;

--EMPLOYEES
ALTER TABLE EMPLOYEES ADD CONSTRAINT DF_EMPLOYEESECONDNAME DEFAULT 'N/A' FOR secondName;

ALTER TABLE EMPLOYEES ADD CONSTRAINT DF_EMPLOYEEGENDER DEFAULT 'N/A' FOR gender;

--UNIQUE

--CLIENTS
ALTER TABLE CLIENTS ADD CONSTRAINT UQ_CLIENTS_PERSONALID UNIQUE(personalID);

ALTER TABLE CLIENTS ADD CONSTRAINT UQ_CLIENTS_IDcardNumber UNIQUE(IDcardNumber);

ALTER TABLE CLIENTS ADD CONSTRAINT UQ_CLIENTS_NUMBER UNIQUE(clientsNumber);

--EMPLOYEES
ALTER TABLE EMPLOYEES ADD CONSTRAINT UQ_EMPLOYEES_PERSONALID UNIQUE(personalID);

ALTER TABLE EMPLOYEES ADD CONSTRAINT UQ_EMPLOYEES_INSURANCENUMBER UNIQUE(insuranceNumber);

ALTER TABLE EMPLOYEES ADD CONSTRAINT UQ_EMPLOYEES_EMPLOYEEID UNIQUE(employeeID);

--RESERVATIONS 
ALTER TABLE RESERVATIONS ADD CONSTRAINT UQ_RESERVATIONS_RESERVATIONNUMBER UNIQUE(reservationNumber);

--ROOMS
ALTER TABLE ROOMS ADD CONSTRAINT UQ_ROOMS_ROOMNUMBER UNIQUE(roomNumber);

--PACKAGES
ALTER TABLE PACKAGES ADD CONSTRAINT UQ_PACKAGES_PACKAGE UNIQUE(package);


--CHECK

--CLIENTS
ALTER TABLE CLIENTS ADD CONSTRAINT CLIENTS_GENDER_CK CHECK(gender IN('M','F'));

--EMPLOYEES
ALTER TABLE EMPLOYEES ADD CONSTRAINT EMLOYEES_GENDER_CK CHECK(gender IN('M','F'));

--There could be included more employee roles depending on the hotel management decisions
ALTER TABLE EMPLOYEES ADD CONSTRAINT EMPLOYEES_TYPE_CK CHECK(type IN('manager', 'doorsman', 'maid', 'receptionist', 'piccolo'));

--According to the bulgarian ministry of labour and social policy it is prohibited to take daily shifts longer than 12 hours
ALTER TABLE EMPLOYEES ADD CONSTRAINT EMPLOYEES_WORKINGHOURS_CK CHECK(workingHours <= 12);


--RESERVATIONS
ALTER TABLE RESERVATIONS ADD CONSTRAINT RESERVATIONS_PACKET_CK CHECK(packet IN('RO', 'BB','FB', 'HB', 'AI'));

--ROOMS

--Suppose we have 5 floors hotel, since they are only five, we can use IN instead of checking if floor is less than 6
ALTER TABLE ROOMS ADD CONSTRAINT ROOMS_FLOOR_CK CHECK(floor IN(1,2,3,4,5));

ALTER TABLE ROOMS ADD CONSTRAINT ROOMS_CAPACITY_CK CHECK(roomCapacity IN(1,2,3,4,5)); 

ALTER TABLE ROOMS ADD CONSTRAINT ROOMS_STATUS_CK CHECK(status IN('F','T','S'));

--Could be included more types 
ALTER TABLE ROOMS ADD CONSTRAINT ROOMS_TYPE_CK CHECK(roomType IN('Room', 'Family', 'Apartment'));

--PACKAGES
ALTER TABLE PACKAGES ADD CONSTRAINT PACKAGES_PACKAGE_CK CHECK(package IN('RO', 'BB','FB', 'HB', 'AI'));


--PRIMARY KEYS
ALTER TABLE CLIENTS ADD CONSTRAINT PK_CLIENTS PRIMARY KEY(clientsNumber);

ALTER TABLE EMPLOYEES ADD CONSTRAINT PK_EMPLOYEES PRIMARY KEY(employeeID);

ALTER TABLE RESERVATIONS ADD CONSTRAINT PK_RESERVATIONS PRIMARY KEY(reservationNumber);

ALTER TABLE ROOMS ADD CONSTRAINT PK_ROOM PRIMARY KEY(roomNumber, priceForNight);

ALTER TABLE PACKAGES ADD CONSTRAINT PK_PACKAGES PRIMARY KEY(package);

--FOREIGN KEYS
ALTER TABLE RESERVATIONS ADD CONSTRAINT FK_RESERVATIONS_CLIENTS FOREIGN KEY(clientsNumber) REFERENCES CLIENTS(clientsNumber); 

ALTER TABLE RESERVATIONS ADD CONSTRAINT FK_RESERVATIONS_PACKAGES FOREIGN KEY(packet) REFERENCES PACKAGES(package);

ALTER TABLE RESERVATIONS ADD CONSTRAINT FK_RESERVATIONS_ROOMS FOREIGN KEY(roomNumber) REFERENCES ROOMS(roomNumber);

ALTER TABLE EMPLOYEES ADD CONSTRAINT FK_EMPLOYEES_ROOMS FOREIGN KEY(roomNumber) REFERENCES ROOMS(roomNumber);